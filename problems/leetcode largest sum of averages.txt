class Solution {
public:
    
    double res(vector<int>&v,int i,int k,double dp[][100]){
        
          if(i>=v.size())
            return 0;
        if(k==0)
            return -1;
        
        if(dp[i][k]!=-1)
            return dp[i][k];
        
        
        double sum=0;
        double avg=0;
        double nans=-1;
        double ans=-1;
        
        for(int j=i;j<=v.size()-k;j++){
            sum+=v[j];
            avg=sum/(j-i+1);
            nans=res(v,j+1,k-1,dp);
            if(nans!=-1)
            ans=max(ans,avg+nans);
            // cout<<"i :"<<i<<" "<<"k :"<<k<<" "<<"avg :"<<avg<<" "<<"ans: "<<ans<<endl;
            
        }
        dp[i][k]=ans;
        return ans;
    }
    
    double largestSumOfAverages(vector<int>& v, int k) {
        double dp[100][100];
        
        for(int i=0;i<100;i++)
            for(int j=0;j<100;j++)
                dp[i][j]=-1;
        
        double ans=res(v,0,k,dp);
        
        return ans;
    }
};