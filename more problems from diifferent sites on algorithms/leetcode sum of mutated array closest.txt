class Solution {
public:
    
    int binsearch(vector<int>v,int n,int target,int mid){
        int sum=0;
        for(int i=0;i<n;i++)
            if(v[i]>mid)
                sum+=mid;
        else
            sum+=v[i];
   
        return abs(target-sum);
    }
    int findBestValue(vector<int>& v, int target) {
        
        int n=v.size();
        int maxi=INT_MIN;
        
        for(int i=0;i<n;i++)
            maxi=max(maxi,v[i]);
        int low=0;
        int high=maxi;
        int diff=INT_MAX;
        int ans=0;

        
        while(low<=high){
            int mid=low+(high-low)/2;
            
            int t1=binsearch(v,n,target,mid);
            int t2=binsearch(v,n,target,mid+1);
            if(t1==0){
                diff=t1;
                ans=mid;
                high=mid-1;
            }else if(t1<=t2){
                diff=t1;
                ans=mid;
                high=mid-1;
            }else{
                diff=t2;
                ans=mid+1;
                low=mid+1;
            }
                
        }
        return ans;
    }
};