class Solution {
public:
    int waysToMakeFair(vector<int>&v) {
        
       
        
        int n=v.size();
         if(n==0 or n==1)
            return 1;
        int feven[n];
        int fodd[n];
        int beven[n];
        int bodd[n];
        
        
        feven[0]=v[0];
        fodd[0]=0;
        
        if(n%2==0){
            beven[n-1]=0;
        bodd[n-1]=v[n-1];
        }
        else{
            beven[n-1]=v[n-1];
        bodd[n-1]=0;
        }
        
        for(int i=1;i<n;i++){
            if(i%2==0)
            {
                feven[i]=feven[i-1]+v[i];
                fodd[i]=fodd[i-1];
            }
            else{
                feven[i]=feven[i-1];
                fodd[i]=fodd[i-1]+v[i];
            }
        }
        
     for(int i=n-2;i>-0;i--){
          if(i%2==0)
            {
                beven[i]=beven[i+1]+v[i];
                bodd[i]=bodd[i+1];
            }
            else{
                beven[i]=beven[i+1];
                bodd[i]=bodd[i+1]+v[i];
            }
     }
        int ans=0;
        
        for(int i=0;i<n;i++){
            int teven,todd=0;
            
            if(i==0){
                teven=bodd[i+1];
                todd=beven[i+1];
            }
            else if(i==n-1){
                teven=feven[i-1];
                todd=fodd[i-1];
            }
              else{
                  teven=feven[i-1]+bodd[i+1];
                  todd=fodd[i-1]+beven[i+1];
            }
            if(teven==todd)
                ans++;
        }
        
        return ans;
        
    }
};